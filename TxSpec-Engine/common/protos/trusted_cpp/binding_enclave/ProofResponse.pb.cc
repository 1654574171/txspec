// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProofResponse.proto

#include "ProofResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_ProofResponse_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ErrorInfo_ProofResponse_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ProofResponse_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Proof_ProofResponse_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ProofResponse_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Receipt_ProofResponse_2eproto;
namespace request_proto {
class ErrorInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ErrorInfo> _instance;
} _ErrorInfo_default_instance_;
class ReceiptDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Receipt> _instance;
} _Receipt_default_instance_;
class ProofDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Proof> _instance;
} _Proof_default_instance_;
class ProofResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProofResponse> _instance;
} _ProofResponse_default_instance_;
}  // namespace request_proto
static void InitDefaultsErrorInfo_ProofResponse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::request_proto::_ErrorInfo_default_instance_;
    new (ptr) ::request_proto::ErrorInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_proto::ErrorInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ErrorInfo_ProofResponse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsErrorInfo_ProofResponse_2eproto}, {}};

static void InitDefaultsReceipt_ProofResponse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::request_proto::_Receipt_default_instance_;
    new (ptr) ::request_proto::Receipt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_proto::Receipt::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Receipt_ProofResponse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReceipt_ProofResponse_2eproto}, {
      &scc_info_ErrorInfo_ProofResponse_2eproto.base,}};

static void InitDefaultsProof_ProofResponse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::request_proto::_Proof_default_instance_;
    new (ptr) ::request_proto::Proof();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_proto::Proof::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Proof_ProofResponse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProof_ProofResponse_2eproto}, {
      &scc_info_Receipt_ProofResponse_2eproto.base,}};

static void InitDefaultsProofResponse_ProofResponse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::request_proto::_ProofResponse_default_instance_;
    new (ptr) ::request_proto::ProofResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_proto::ProofResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ProofResponse_ProofResponse_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProofResponse_ProofResponse_2eproto}, {
      &scc_info_Proof_ProofResponse_2eproto.base,}};

void InitDefaults_ProofResponse_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_ErrorInfo_ProofResponse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Receipt_ProofResponse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Proof_ProofResponse_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProofResponse_ProofResponse_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_ProofResponse_2eproto[4];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_ProofResponse_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_ProofResponse_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_ProofResponse_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::request_proto::ErrorInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::request_proto::ErrorInfo, status_),
  PROTOBUF_FIELD_OFFSET(::request_proto::ErrorInfo, rulefilename_),
  PROTOBUF_FIELD_OFFSET(::request_proto::ErrorInfo, rulefileid_),
  PROTOBUF_FIELD_OFFSET(::request_proto::ErrorInfo, errorstring_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::request_proto::Receipt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::request_proto::Receipt, status_),
  PROTOBUF_FIELD_OFFSET(::request_proto::Receipt, contractid_),
  PROTOBUF_FIELD_OFFSET(::request_proto::Receipt, bindinghash_),
  PROTOBUF_FIELD_OFFSET(::request_proto::Receipt, rulefilehash_),
  PROTOBUF_FIELD_OFFSET(::request_proto::Receipt, errorinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::request_proto::Proof, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::request_proto::Proof, status_),
  PROTOBUF_FIELD_OFFSET(::request_proto::Proof, requesthash_),
  PROTOBUF_FIELD_OFFSET(::request_proto::Proof, statehash_),
  PROTOBUF_FIELD_OFFSET(::request_proto::Proof, receipts_),
  PROTOBUF_FIELD_OFFSET(::request_proto::Proof, signature_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::request_proto::ProofResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::request_proto::ProofResponse, txhash_),
  PROTOBUF_FIELD_OFFSET(::request_proto::ProofResponse, proofshash_),
  PROTOBUF_FIELD_OFFSET(::request_proto::ProofResponse, proofs_),
  PROTOBUF_FIELD_OFFSET(::request_proto::ProofResponse, teesignature_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::request_proto::ErrorInfo)},
  { 9, -1, sizeof(::request_proto::Receipt)},
  { 19, -1, sizeof(::request_proto::Proof)},
  { 29, -1, sizeof(::request_proto::ProofResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::request_proto::_ErrorInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::request_proto::_Receipt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::request_proto::_Proof_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::request_proto::_ProofResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_ProofResponse_2eproto = {
  {}, AddDescriptors_ProofResponse_2eproto, "ProofResponse.proto", schemas,
  file_default_instances, TableStruct_ProofResponse_2eproto::offsets,
  file_level_metadata_ProofResponse_2eproto, 4, file_level_enum_descriptors_ProofResponse_2eproto, file_level_service_descriptors_ProofResponse_2eproto,
};

const char descriptor_table_protodef_ProofResponse_2eproto[] =
  "\n\023ProofResponse.proto\022\rrequest_proto\"Z\n\t"
  "ErrorInfo\022\016\n\006status\030\001 \001(\010\022\024\n\014ruleFileNam"
  "e\030\002 \001(\t\022\022\n\nruleFileID\030\003 \001(\t\022\023\n\013errorStri"
  "ng\030\004 \001(\t\"\205\001\n\007Receipt\022\016\n\006Status\030\001 \001(\010\022\022\n\n"
  "contractid\030\002 \001(\t\022\023\n\013bindingHash\030\003 \001(\014\022\024\n"
  "\014ruleFileHash\030\004 \003(\014\022+\n\terrorInfo\030\005 \003(\0132\030"
  ".request_proto.ErrorInfo\"|\n\005Proof\022\016\n\006sta"
  "tus\030\001 \001(\010\022\023\n\013RequestHash\030\002 \001(\014\022\021\n\tStateH"
  "ash\030\003 \001(\014\022(\n\010receipts\030\004 \003(\0132\026.request_pr"
  "oto.Receipt\022\021\n\tSignature\030\005 \001(\014\"o\n\rProofR"
  "esponse\022\016\n\006TxHash\030\001 \001(\014\022\022\n\nProofsHash\030\002 "
  "\001(\014\022$\n\006Proofs\030\003 \003(\0132\024.request_proto.Proo"
  "f\022\024\n\014TeeSignature\030\004 \001(\014b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_ProofResponse_2eproto = {
  false, InitDefaults_ProofResponse_2eproto, 
  descriptor_table_protodef_ProofResponse_2eproto,
  "ProofResponse.proto", &assign_descriptors_table_ProofResponse_2eproto, 511,
};

void AddDescriptors_ProofResponse_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_ProofResponse_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ProofResponse_2eproto = []() { AddDescriptors_ProofResponse_2eproto(); return true; }();
namespace request_proto {

// ===================================================================

void ErrorInfo::InitAsDefaultInstance() {
}
class ErrorInfo::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorInfo::kStatusFieldNumber;
const int ErrorInfo::kRuleFileNameFieldNumber;
const int ErrorInfo::kRuleFileIDFieldNumber;
const int ErrorInfo::kErrorStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorInfo::ErrorInfo()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_proto.ErrorInfo)
}
ErrorInfo::ErrorInfo(const ErrorInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rulefilename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rulefilename().size() > 0) {
    rulefilename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rulefilename_);
  }
  rulefileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rulefileid().size() > 0) {
    rulefileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rulefileid_);
  }
  errorstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errorstring().size() > 0) {
    errorstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errorstring_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:request_proto.ErrorInfo)
}

void ErrorInfo::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ErrorInfo_ProofResponse_2eproto.base);
  rulefilename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rulefileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorstring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = false;
}

ErrorInfo::~ErrorInfo() {
  // @@protoc_insertion_point(destructor:request_proto.ErrorInfo)
  SharedDtor();
}

void ErrorInfo::SharedDtor() {
  rulefilename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rulefileid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorstring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ErrorInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ErrorInfo& ErrorInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ErrorInfo_ProofResponse_2eproto.base);
  return *internal_default_instance();
}


void ErrorInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:request_proto.ErrorInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rulefilename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rulefileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorstring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ErrorInfo::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ErrorInfo*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_status(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string ruleFileName = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("request_proto.ErrorInfo.ruleFileName");
        object = msg->mutable_rulefilename();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string ruleFileID = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("request_proto.ErrorInfo.ruleFileID");
        object = msg->mutable_rulefileid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string errorString = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("request_proto.ErrorInfo.errorString");
        object = msg->mutable_errorstring();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ErrorInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:request_proto.ErrorInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ruleFileName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rulefilename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rulefilename().data(), static_cast<int>(this->rulefilename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "request_proto.ErrorInfo.ruleFileName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ruleFileID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rulefileid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rulefileid().data(), static_cast<int>(this->rulefileid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "request_proto.ErrorInfo.ruleFileID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string errorString = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errorstring()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errorstring().data(), static_cast<int>(this->errorstring().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "request_proto.ErrorInfo.errorString"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:request_proto.ErrorInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:request_proto.ErrorInfo)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ErrorInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:request_proto.ErrorInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->status(), output);
  }

  // string ruleFileName = 2;
  if (this->rulefilename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rulefilename().data(), static_cast<int>(this->rulefilename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.ErrorInfo.ruleFileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rulefilename(), output);
  }

  // string ruleFileID = 3;
  if (this->rulefileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rulefileid().data(), static_cast<int>(this->rulefileid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.ErrorInfo.ruleFileID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->rulefileid(), output);
  }

  // string errorString = 4;
  if (this->errorstring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errorstring().data(), static_cast<int>(this->errorstring().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.ErrorInfo.errorString");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->errorstring(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:request_proto.ErrorInfo)
}

::google::protobuf::uint8* ErrorInfo::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_proto.ErrorInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->status(), target);
  }

  // string ruleFileName = 2;
  if (this->rulefilename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rulefilename().data(), static_cast<int>(this->rulefilename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.ErrorInfo.ruleFileName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rulefilename(), target);
  }

  // string ruleFileID = 3;
  if (this->rulefileid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rulefileid().data(), static_cast<int>(this->rulefileid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.ErrorInfo.ruleFileID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->rulefileid(), target);
  }

  // string errorString = 4;
  if (this->errorstring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errorstring().data(), static_cast<int>(this->errorstring().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.ErrorInfo.errorString");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->errorstring(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_proto.ErrorInfo)
  return target;
}

size_t ErrorInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_proto.ErrorInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ruleFileName = 2;
  if (this->rulefilename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rulefilename());
  }

  // string ruleFileID = 3;
  if (this->rulefileid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rulefileid());
  }

  // string errorString = 4;
  if (this->errorstring().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errorstring());
  }

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ErrorInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_proto.ErrorInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorInfo* source =
      ::google::protobuf::DynamicCastToGenerated<ErrorInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_proto.ErrorInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_proto.ErrorInfo)
    MergeFrom(*source);
  }
}

void ErrorInfo::MergeFrom(const ErrorInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_proto.ErrorInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rulefilename().size() > 0) {

    rulefilename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rulefilename_);
  }
  if (from.rulefileid().size() > 0) {

    rulefileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rulefileid_);
  }
  if (from.errorstring().size() > 0) {

    errorstring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errorstring_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void ErrorInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_proto.ErrorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorInfo::CopyFrom(const ErrorInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_proto.ErrorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorInfo::IsInitialized() const {
  return true;
}

void ErrorInfo::Swap(ErrorInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorInfo::InternalSwap(ErrorInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  rulefilename_.Swap(&other->rulefilename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rulefileid_.Swap(&other->rulefileid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  errorstring_.Swap(&other->errorstring_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
}

::google::protobuf::Metadata ErrorInfo::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ProofResponse_2eproto);
  return ::file_level_metadata_ProofResponse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Receipt::InitAsDefaultInstance() {
}
class Receipt::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Receipt::kStatusFieldNumber;
const int Receipt::kContractidFieldNumber;
const int Receipt::kBindingHashFieldNumber;
const int Receipt::kRuleFileHashFieldNumber;
const int Receipt::kErrorInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Receipt::Receipt()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_proto.Receipt)
}
Receipt::Receipt(const Receipt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      rulefilehash_(from.rulefilehash_),
      errorinfo_(from.errorinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  contractid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contractid().size() > 0) {
    contractid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contractid_);
  }
  bindinghash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bindinghash().size() > 0) {
    bindinghash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bindinghash_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:request_proto.Receipt)
}

void Receipt::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Receipt_ProofResponse_2eproto.base);
  contractid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bindinghash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = false;
}

Receipt::~Receipt() {
  // @@protoc_insertion_point(destructor:request_proto.Receipt)
  SharedDtor();
}

void Receipt::SharedDtor() {
  contractid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bindinghash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Receipt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Receipt& Receipt::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Receipt_ProofResponse_2eproto.base);
  return *internal_default_instance();
}


void Receipt::Clear() {
// @@protoc_insertion_point(message_clear_start:request_proto.Receipt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rulefilehash_.Clear();
  errorinfo_.Clear();
  contractid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bindinghash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Receipt::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Receipt*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool Status = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_status(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string contractid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("request_proto.Receipt.contractid");
        object = msg->mutable_contractid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes bindingHash = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_bindinghash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated bytes ruleFileHash = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          object = msg->add_rulefilehash();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParser;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // repeated .request_proto.ErrorInfo errorInfo = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::request_proto::ErrorInfo::_InternalParse;
          object = msg->add_errorinfo();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Receipt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:request_proto.Receipt)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string contractid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contractid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contractid().data(), static_cast<int>(this->contractid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "request_proto.Receipt.contractid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes bindingHash = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bindinghash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes ruleFileHash = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_rulefilehash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .request_proto.ErrorInfo errorInfo = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_errorinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:request_proto.Receipt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:request_proto.Receipt)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Receipt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:request_proto.Receipt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->status(), output);
  }

  // string contractid = 2;
  if (this->contractid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contractid().data(), static_cast<int>(this->contractid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.Receipt.contractid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->contractid(), output);
  }

  // bytes bindingHash = 3;
  if (this->bindinghash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->bindinghash(), output);
  }

  // repeated bytes ruleFileHash = 4;
  for (int i = 0, n = this->rulefilehash_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      4, this->rulefilehash(i), output);
  }

  // repeated .request_proto.ErrorInfo errorInfo = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errorinfo_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->errorinfo(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:request_proto.Receipt)
}

::google::protobuf::uint8* Receipt::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_proto.Receipt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->status(), target);
  }

  // string contractid = 2;
  if (this->contractid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contractid().data(), static_cast<int>(this->contractid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.Receipt.contractid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->contractid(), target);
  }

  // bytes bindingHash = 3;
  if (this->bindinghash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->bindinghash(), target);
  }

  // repeated bytes ruleFileHash = 4;
  for (int i = 0, n = this->rulefilehash_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(4, this->rulefilehash(i), target);
  }

  // repeated .request_proto.ErrorInfo errorInfo = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errorinfo_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->errorinfo(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_proto.Receipt)
  return target;
}

size_t Receipt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_proto.Receipt)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes ruleFileHash = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->rulefilehash_size());
  for (int i = 0, n = this->rulefilehash_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->rulefilehash(i));
  }

  // repeated .request_proto.ErrorInfo errorInfo = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->errorinfo_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->errorinfo(static_cast<int>(i)));
    }
  }

  // string contractid = 2;
  if (this->contractid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contractid());
  }

  // bytes bindingHash = 3;
  if (this->bindinghash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bindinghash());
  }

  // bool Status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Receipt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_proto.Receipt)
  GOOGLE_DCHECK_NE(&from, this);
  const Receipt* source =
      ::google::protobuf::DynamicCastToGenerated<Receipt>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_proto.Receipt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_proto.Receipt)
    MergeFrom(*source);
  }
}

void Receipt::MergeFrom(const Receipt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_proto.Receipt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rulefilehash_.MergeFrom(from.rulefilehash_);
  errorinfo_.MergeFrom(from.errorinfo_);
  if (from.contractid().size() > 0) {

    contractid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contractid_);
  }
  if (from.bindinghash().size() > 0) {

    bindinghash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bindinghash_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void Receipt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_proto.Receipt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Receipt::CopyFrom(const Receipt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_proto.Receipt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Receipt::IsInitialized() const {
  return true;
}

void Receipt::Swap(Receipt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Receipt::InternalSwap(Receipt* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  rulefilehash_.InternalSwap(CastToBase(&other->rulefilehash_));
  CastToBase(&errorinfo_)->InternalSwap(CastToBase(&other->errorinfo_));
  contractid_.Swap(&other->contractid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  bindinghash_.Swap(&other->bindinghash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
}

::google::protobuf::Metadata Receipt::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ProofResponse_2eproto);
  return ::file_level_metadata_ProofResponse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Proof::InitAsDefaultInstance() {
}
class Proof::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Proof::kStatusFieldNumber;
const int Proof::kRequestHashFieldNumber;
const int Proof::kStateHashFieldNumber;
const int Proof::kReceiptsFieldNumber;
const int Proof::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Proof::Proof()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_proto.Proof)
}
Proof::Proof(const Proof& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      receipts_(from.receipts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  requesthash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.requesthash().size() > 0) {
    requesthash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.requesthash_);
  }
  statehash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.statehash().size() > 0) {
    statehash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.statehash_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:request_proto.Proof)
}

void Proof::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Proof_ProofResponse_2eproto.base);
  requesthash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statehash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = false;
}

Proof::~Proof() {
  // @@protoc_insertion_point(destructor:request_proto.Proof)
  SharedDtor();
}

void Proof::SharedDtor() {
  requesthash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statehash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Proof::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Proof& Proof::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Proof_ProofResponse_2eproto.base);
  return *internal_default_instance();
}


void Proof::Clear() {
// @@protoc_insertion_point(message_clear_start:request_proto.Proof)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  receipts_.Clear();
  requesthash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statehash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Proof::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Proof*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool status = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_status(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bytes RequestHash = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_requesthash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes StateHash = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_statehash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .request_proto.Receipt receipts = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::request_proto::Receipt::_InternalParse;
          object = msg->add_receipts();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // bytes Signature = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_signature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Proof::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:request_proto.Proof)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes RequestHash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_requesthash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes StateHash = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_statehash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .request_proto.Receipt receipts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_receipts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Signature = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:request_proto.Proof)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:request_proto.Proof)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Proof::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:request_proto.Proof)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->status(), output);
  }

  // bytes RequestHash = 2;
  if (this->requesthash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->requesthash(), output);
  }

  // bytes StateHash = 3;
  if (this->statehash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->statehash(), output);
  }

  // repeated .request_proto.Receipt receipts = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->receipts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->receipts(static_cast<int>(i)),
      output);
  }

  // bytes Signature = 5;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->signature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:request_proto.Proof)
}

::google::protobuf::uint8* Proof::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_proto.Proof)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->status(), target);
  }

  // bytes RequestHash = 2;
  if (this->requesthash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->requesthash(), target);
  }

  // bytes StateHash = 3;
  if (this->statehash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->statehash(), target);
  }

  // repeated .request_proto.Receipt receipts = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->receipts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->receipts(static_cast<int>(i)), target);
  }

  // bytes Signature = 5;
  if (this->signature().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->signature(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_proto.Proof)
  return target;
}

size_t Proof::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_proto.Proof)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .request_proto.Receipt receipts = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->receipts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->receipts(static_cast<int>(i)));
    }
  }

  // bytes RequestHash = 2;
  if (this->requesthash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->requesthash());
  }

  // bytes StateHash = 3;
  if (this->statehash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->statehash());
  }

  // bytes Signature = 5;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->signature());
  }

  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Proof::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_proto.Proof)
  GOOGLE_DCHECK_NE(&from, this);
  const Proof* source =
      ::google::protobuf::DynamicCastToGenerated<Proof>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_proto.Proof)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_proto.Proof)
    MergeFrom(*source);
  }
}

void Proof::MergeFrom(const Proof& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_proto.Proof)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  receipts_.MergeFrom(from.receipts_);
  if (from.requesthash().size() > 0) {

    requesthash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.requesthash_);
  }
  if (from.statehash().size() > 0) {

    statehash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.statehash_);
  }
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void Proof::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_proto.Proof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proof::CopyFrom(const Proof& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_proto.Proof)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proof::IsInitialized() const {
  return true;
}

void Proof::Swap(Proof* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Proof::InternalSwap(Proof* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&receipts_)->InternalSwap(CastToBase(&other->receipts_));
  requesthash_.Swap(&other->requesthash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  statehash_.Swap(&other->statehash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  signature_.Swap(&other->signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
}

::google::protobuf::Metadata Proof::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ProofResponse_2eproto);
  return ::file_level_metadata_ProofResponse_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ProofResponse::InitAsDefaultInstance() {
}
class ProofResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProofResponse::kTxHashFieldNumber;
const int ProofResponse::kProofsHashFieldNumber;
const int ProofResponse::kProofsFieldNumber;
const int ProofResponse::kTeeSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProofResponse::ProofResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_proto.ProofResponse)
}
ProofResponse::ProofResponse(const ProofResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      proofs_(from.proofs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  txhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.txhash().size() > 0) {
    txhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txhash_);
  }
  proofshash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.proofshash().size() > 0) {
    proofshash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proofshash_);
  }
  teesignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.teesignature().size() > 0) {
    teesignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.teesignature_);
  }
  // @@protoc_insertion_point(copy_constructor:request_proto.ProofResponse)
}

void ProofResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ProofResponse_ProofResponse_2eproto.base);
  txhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proofshash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  teesignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ProofResponse::~ProofResponse() {
  // @@protoc_insertion_point(destructor:request_proto.ProofResponse)
  SharedDtor();
}

void ProofResponse::SharedDtor() {
  txhash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proofshash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  teesignature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProofResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProofResponse& ProofResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ProofResponse_ProofResponse_2eproto.base);
  return *internal_default_instance();
}


void ProofResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:request_proto.ProofResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  proofs_.Clear();
  txhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proofshash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  teesignature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ProofResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ProofResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes TxHash = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_txhash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes ProofsHash = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_proofshash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .request_proto.Proof Proofs = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::request_proto::Proof::_InternalParse;
          object = msg->add_proofs();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // bytes TeeSignature = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_teesignature();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ProofResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:request_proto.ProofResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes TxHash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_txhash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ProofsHash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_proofshash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .request_proto.Proof Proofs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_proofs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes TeeSignature = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_teesignature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:request_proto.ProofResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:request_proto.ProofResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ProofResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:request_proto.ProofResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes TxHash = 1;
  if (this->txhash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->txhash(), output);
  }

  // bytes ProofsHash = 2;
  if (this->proofshash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->proofshash(), output);
  }

  // repeated .request_proto.Proof Proofs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->proofs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->proofs(static_cast<int>(i)),
      output);
  }

  // bytes TeeSignature = 4;
  if (this->teesignature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->teesignature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:request_proto.ProofResponse)
}

::google::protobuf::uint8* ProofResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_proto.ProofResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes TxHash = 1;
  if (this->txhash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->txhash(), target);
  }

  // bytes ProofsHash = 2;
  if (this->proofshash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->proofshash(), target);
  }

  // repeated .request_proto.Proof Proofs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->proofs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->proofs(static_cast<int>(i)), target);
  }

  // bytes TeeSignature = 4;
  if (this->teesignature().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->teesignature(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_proto.ProofResponse)
  return target;
}

size_t ProofResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_proto.ProofResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .request_proto.Proof Proofs = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->proofs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->proofs(static_cast<int>(i)));
    }
  }

  // bytes TxHash = 1;
  if (this->txhash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->txhash());
  }

  // bytes ProofsHash = 2;
  if (this->proofshash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->proofshash());
  }

  // bytes TeeSignature = 4;
  if (this->teesignature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->teesignature());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProofResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_proto.ProofResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ProofResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ProofResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_proto.ProofResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_proto.ProofResponse)
    MergeFrom(*source);
  }
}

void ProofResponse::MergeFrom(const ProofResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_proto.ProofResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  proofs_.MergeFrom(from.proofs_);
  if (from.txhash().size() > 0) {

    txhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txhash_);
  }
  if (from.proofshash().size() > 0) {

    proofshash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proofshash_);
  }
  if (from.teesignature().size() > 0) {

    teesignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.teesignature_);
  }
}

void ProofResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_proto.ProofResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProofResponse::CopyFrom(const ProofResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_proto.ProofResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProofResponse::IsInitialized() const {
  return true;
}

void ProofResponse::Swap(ProofResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProofResponse::InternalSwap(ProofResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&proofs_)->InternalSwap(CastToBase(&other->proofs_));
  txhash_.Swap(&other->txhash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  proofshash_.Swap(&other->proofshash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  teesignature_.Swap(&other->teesignature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ProofResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ProofResponse_2eproto);
  return ::file_level_metadata_ProofResponse_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace request_proto
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::request_proto::ErrorInfo* Arena::CreateMaybeMessage< ::request_proto::ErrorInfo >(Arena* arena) {
  return Arena::CreateInternal< ::request_proto::ErrorInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::request_proto::Receipt* Arena::CreateMaybeMessage< ::request_proto::Receipt >(Arena* arena) {
  return Arena::CreateInternal< ::request_proto::Receipt >(arena);
}
template<> PROTOBUF_NOINLINE ::request_proto::Proof* Arena::CreateMaybeMessage< ::request_proto::Proof >(Arena* arena) {
  return Arena::CreateInternal< ::request_proto::Proof >(arena);
}
template<> PROTOBUF_NOINLINE ::request_proto::ProofResponse* Arena::CreateMaybeMessage< ::request_proto::ProofResponse >(Arena* arena) {
  return Arena::CreateInternal< ::request_proto::ProofResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
