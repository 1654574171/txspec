// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProofRequest.proto

#include "ProofRequest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_ProofRequest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Attribute_ProofRequest_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ProofRequest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TxMetaData_ProofRequest_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ProofRequest_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ContractEvent_ProofRequest_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ProofRequest_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Event_ProofRequest_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ProofRequest_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Data_ProofRequest_2eproto;
namespace request_proto {
class AttributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Attribute> _instance;
} _Attribute_default_instance_;
class EventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Event> _instance;
} _Event_default_instance_;
class ContractEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContractEvent> _instance;
} _ContractEvent_default_instance_;
class TxMetaDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TxMetaData> _instance;
} _TxMetaData_default_instance_;
class DataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Data> _instance;
} _Data_default_instance_;
class ProofRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProofRequest> _instance;
} _ProofRequest_default_instance_;
}  // namespace request_proto
static void InitDefaultsAttribute_ProofRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::request_proto::_Attribute_default_instance_;
    new (ptr) ::request_proto::Attribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_proto::Attribute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Attribute_ProofRequest_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAttribute_ProofRequest_2eproto}, {}};

static void InitDefaultsEvent_ProofRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::request_proto::_Event_default_instance_;
    new (ptr) ::request_proto::Event();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_proto::Event::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Event_ProofRequest_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEvent_ProofRequest_2eproto}, {
      &scc_info_Attribute_ProofRequest_2eproto.base,}};

static void InitDefaultsContractEvent_ProofRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::request_proto::_ContractEvent_default_instance_;
    new (ptr) ::request_proto::ContractEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_proto::ContractEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ContractEvent_ProofRequest_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsContractEvent_ProofRequest_2eproto}, {
      &scc_info_Event_ProofRequest_2eproto.base,}};

static void InitDefaultsTxMetaData_ProofRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::request_proto::_TxMetaData_default_instance_;
    new (ptr) ::request_proto::TxMetaData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_proto::TxMetaData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TxMetaData_ProofRequest_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTxMetaData_ProofRequest_2eproto}, {}};

static void InitDefaultsData_ProofRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::request_proto::_Data_default_instance_;
    new (ptr) ::request_proto::Data();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_proto::Data::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Data_ProofRequest_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsData_ProofRequest_2eproto}, {
      &scc_info_TxMetaData_ProofRequest_2eproto.base,
      &scc_info_ContractEvent_ProofRequest_2eproto.base,}};

static void InitDefaultsProofRequest_ProofRequest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::request_proto::_ProofRequest_default_instance_;
    new (ptr) ::request_proto::ProofRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::request_proto::ProofRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ProofRequest_ProofRequest_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProofRequest_ProofRequest_2eproto}, {
      &scc_info_Data_ProofRequest_2eproto.base,}};

void InitDefaults_ProofRequest_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Attribute_ProofRequest_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Event_ProofRequest_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ContractEvent_ProofRequest_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TxMetaData_ProofRequest_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Data_ProofRequest_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProofRequest_ProofRequest_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_ProofRequest_2eproto[6];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_ProofRequest_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_ProofRequest_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_ProofRequest_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::request_proto::Attribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::request_proto::Attribute, key_),
  PROTOBUF_FIELD_OFFSET(::request_proto::Attribute, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::request_proto::Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::request_proto::Event, eventname_),
  PROTOBUF_FIELD_OFFSET(::request_proto::Event, attributes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::request_proto::ContractEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::request_proto::ContractEvent, contractid_),
  PROTOBUF_FIELD_OFFSET(::request_proto::ContractEvent, events_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::request_proto::TxMetaData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::request_proto::TxMetaData, fromaddress_),
  PROTOBUF_FIELD_OFFSET(::request_proto::TxMetaData, toaddress_),
  PROTOBUF_FIELD_OFFSET(::request_proto::TxMetaData, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::request_proto::Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::request_proto::Data, meta_),
  PROTOBUF_FIELD_OFFSET(::request_proto::Data, events_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::request_proto::ProofRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::request_proto::ProofRequest, chaintype_),
  PROTOBUF_FIELD_OFFSET(::request_proto::ProofRequest, chainid_),
  PROTOBUF_FIELD_OFFSET(::request_proto::ProofRequest, data_),
  PROTOBUF_FIELD_OFFSET(::request_proto::ProofRequest, txhash_),
  PROTOBUF_FIELD_OFFSET(::request_proto::ProofRequest, height_),
  PROTOBUF_FIELD_OFFSET(::request_proto::ProofRequest, txindex_),
  PROTOBUF_FIELD_OFFSET(::request_proto::ProofRequest, originaldata_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::request_proto::Attribute)},
  { 7, -1, sizeof(::request_proto::Event)},
  { 14, -1, sizeof(::request_proto::ContractEvent)},
  { 21, -1, sizeof(::request_proto::TxMetaData)},
  { 29, -1, sizeof(::request_proto::Data)},
  { 36, -1, sizeof(::request_proto::ProofRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::request_proto::_Attribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::request_proto::_Event_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::request_proto::_ContractEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::request_proto::_TxMetaData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::request_proto::_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::request_proto::_ProofRequest_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_ProofRequest_2eproto = {
  {}, AddDescriptors_ProofRequest_2eproto, "ProofRequest.proto", schemas,
  file_default_instances, TableStruct_ProofRequest_2eproto::offsets,
  file_level_metadata_ProofRequest_2eproto, 6, file_level_enum_descriptors_ProofRequest_2eproto, file_level_service_descriptors_ProofRequest_2eproto,
};

const char descriptor_table_protodef_ProofRequest_2eproto[] =
  "\n\022ProofRequest.proto\022\rrequest_proto\"\'\n\tA"
  "ttribute\022\013\n\003Key\030\001 \001(\t\022\r\n\005Value\030\002 \001(\t\"H\n\005"
  "Event\022\021\n\tEventName\030\001 \001(\t\022,\n\nattributes\030\002"
  " \003(\0132\030.request_proto.Attribute\"I\n\rContra"
  "ctEvent\022\022\n\nContractID\030\001 \001(\t\022$\n\006events\030\002 "
  "\003(\0132\024.request_proto.Event\"C\n\nTxMetaData\022"
  "\023\n\013fromAddress\030\001 \001(\014\022\021\n\tToAddress\030\002 \001(\014\022"
  "\r\n\005Value\030\003 \001(\004\"]\n\004Data\022\'\n\004meta\030\001 \001(\0132\031.r"
  "equest_proto.TxMetaData\022,\n\006events\030\002 \003(\0132"
  "\034.request_proto.ContractEvent\"\234\001\n\014ProofR"
  "equest\022\021\n\tChainType\030\001 \001(\t\022\017\n\007ChainID\030\002 \001"
  "(\t\022!\n\004Data\030\003 \001(\0132\023.request_proto.Data\022\016\n"
  "\006TxHash\030\004 \001(\014\022\016\n\006Height\030\005 \001(\004\022\017\n\007TxIndex"
  "\030\006 \001(\004\022\024\n\014OriginalData\030\007 \001(\014b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_ProofRequest_2eproto = {
  false, InitDefaults_ProofRequest_2eproto, 
  descriptor_table_protodef_ProofRequest_2eproto,
  "ProofRequest.proto", &assign_descriptors_table_ProofRequest_2eproto, 556,
};

void AddDescriptors_ProofRequest_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_ProofRequest_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ProofRequest_2eproto = []() { AddDescriptors_ProofRequest_2eproto(); return true; }();
namespace request_proto {

// ===================================================================

void Attribute::InitAsDefaultInstance() {
}
class Attribute::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Attribute::kKeyFieldNumber;
const int Attribute::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Attribute::Attribute()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_proto.Attribute)
}
Attribute::Attribute(const Attribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:request_proto.Attribute)
}

void Attribute::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Attribute_ProofRequest_2eproto.base);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Attribute::~Attribute() {
  // @@protoc_insertion_point(destructor:request_proto.Attribute)
  SharedDtor();
}

void Attribute::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Attribute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Attribute& Attribute::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Attribute_ProofRequest_2eproto.base);
  return *internal_default_instance();
}


void Attribute::Clear() {
// @@protoc_insertion_point(message_clear_start:request_proto.Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Attribute::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Attribute*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string Key = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("request_proto.Attribute.Key");
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string Value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("request_proto.Attribute.Value");
        object = msg->mutable_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Attribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:request_proto.Attribute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "request_proto.Attribute.Key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "request_proto.Attribute.Value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:request_proto.Attribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:request_proto.Attribute)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Attribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:request_proto.Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.Attribute.Key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string Value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.Attribute.Value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:request_proto.Attribute)
}

::google::protobuf::uint8* Attribute::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_proto.Attribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.Attribute.Key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string Value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.Attribute.Value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_proto.Attribute)
  return target;
}

size_t Attribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_proto.Attribute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string Value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Attribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_proto.Attribute)
  GOOGLE_DCHECK_NE(&from, this);
  const Attribute* source =
      ::google::protobuf::DynamicCastToGenerated<Attribute>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_proto.Attribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_proto.Attribute)
    MergeFrom(*source);
  }
}

void Attribute::MergeFrom(const Attribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_proto.Attribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void Attribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_proto.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Attribute::CopyFrom(const Attribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_proto.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Attribute::IsInitialized() const {
  return true;
}

void Attribute::Swap(Attribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Attribute::InternalSwap(Attribute* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Attribute::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ProofRequest_2eproto);
  return ::file_level_metadata_ProofRequest_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Event::InitAsDefaultInstance() {
}
class Event::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Event::kEventNameFieldNumber;
const int Event::kAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Event::Event()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_proto.Event)
}
Event::Event(const Event& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      attributes_(from.attributes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eventname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.eventname().size() > 0) {
    eventname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.eventname_);
  }
  // @@protoc_insertion_point(copy_constructor:request_proto.Event)
}

void Event::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Event_ProofRequest_2eproto.base);
  eventname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Event::~Event() {
  // @@protoc_insertion_point(destructor:request_proto.Event)
  SharedDtor();
}

void Event::SharedDtor() {
  eventname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Event::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Event& Event::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Event_ProofRequest_2eproto.base);
  return *internal_default_instance();
}


void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:request_proto.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes_.Clear();
  eventname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Event::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Event*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string EventName = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("request_proto.Event.EventName");
        object = msg->mutable_eventname();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .request_proto.Attribute attributes = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::request_proto::Attribute::_InternalParse;
          object = msg->add_attributes();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:request_proto.Event)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string EventName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_eventname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->eventname().data(), static_cast<int>(this->eventname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "request_proto.Event.EventName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .request_proto.Attribute attributes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:request_proto.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:request_proto.Event)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:request_proto.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string EventName = 1;
  if (this->eventname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->eventname().data(), static_cast<int>(this->eventname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.Event.EventName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->eventname(), output);
  }

  // repeated .request_proto.Attribute attributes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->attributes(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:request_proto.Event)
}

::google::protobuf::uint8* Event::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_proto.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string EventName = 1;
  if (this->eventname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->eventname().data(), static_cast<int>(this->eventname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.Event.EventName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->eventname(), target);
  }

  // repeated .request_proto.Attribute attributes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->attributes(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_proto.Event)
  return target;
}

size_t Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_proto.Event)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .request_proto.Attribute attributes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->attributes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attributes(static_cast<int>(i)));
    }
  }

  // string EventName = 1;
  if (this->eventname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->eventname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_proto.Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Event* source =
      ::google::protobuf::DynamicCastToGenerated<Event>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_proto.Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_proto.Event)
    MergeFrom(*source);
  }
}

void Event::MergeFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_proto.Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributes_.MergeFrom(from.attributes_);
  if (from.eventname().size() > 0) {

    eventname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.eventname_);
  }
}

void Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_proto.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_proto.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event::IsInitialized() const {
  return true;
}

void Event::Swap(Event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Event::InternalSwap(Event* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&attributes_)->InternalSwap(CastToBase(&other->attributes_));
  eventname_.Swap(&other->eventname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata Event::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ProofRequest_2eproto);
  return ::file_level_metadata_ProofRequest_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ContractEvent::InitAsDefaultInstance() {
}
class ContractEvent::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContractEvent::kContractIDFieldNumber;
const int ContractEvent::kEventsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContractEvent::ContractEvent()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_proto.ContractEvent)
}
ContractEvent::ContractEvent(const ContractEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      events_(from.events_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  contractid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contractid().size() > 0) {
    contractid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contractid_);
  }
  // @@protoc_insertion_point(copy_constructor:request_proto.ContractEvent)
}

void ContractEvent::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ContractEvent_ProofRequest_2eproto.base);
  contractid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ContractEvent::~ContractEvent() {
  // @@protoc_insertion_point(destructor:request_proto.ContractEvent)
  SharedDtor();
}

void ContractEvent::SharedDtor() {
  contractid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ContractEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ContractEvent& ContractEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ContractEvent_ProofRequest_2eproto.base);
  return *internal_default_instance();
}


void ContractEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:request_proto.ContractEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  events_.Clear();
  contractid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ContractEvent::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ContractEvent*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string ContractID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("request_proto.ContractEvent.ContractID");
        object = msg->mutable_contractid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .request_proto.Event events = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::request_proto::Event::_InternalParse;
          object = msg->add_events();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ContractEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:request_proto.ContractEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ContractID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contractid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contractid().data(), static_cast<int>(this->contractid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "request_proto.ContractEvent.ContractID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .request_proto.Event events = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:request_proto.ContractEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:request_proto.ContractEvent)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ContractEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:request_proto.ContractEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ContractID = 1;
  if (this->contractid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contractid().data(), static_cast<int>(this->contractid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.ContractEvent.ContractID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->contractid(), output);
  }

  // repeated .request_proto.Event events = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->events(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:request_proto.ContractEvent)
}

::google::protobuf::uint8* ContractEvent::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_proto.ContractEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ContractID = 1;
  if (this->contractid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contractid().data(), static_cast<int>(this->contractid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.ContractEvent.ContractID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->contractid(), target);
  }

  // repeated .request_proto.Event events = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->events(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_proto.ContractEvent)
  return target;
}

size_t ContractEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_proto.ContractEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .request_proto.Event events = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->events_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->events(static_cast<int>(i)));
    }
  }

  // string ContractID = 1;
  if (this->contractid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contractid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ContractEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_proto.ContractEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ContractEvent* source =
      ::google::protobuf::DynamicCastToGenerated<ContractEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_proto.ContractEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_proto.ContractEvent)
    MergeFrom(*source);
  }
}

void ContractEvent::MergeFrom(const ContractEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_proto.ContractEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  events_.MergeFrom(from.events_);
  if (from.contractid().size() > 0) {

    contractid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contractid_);
  }
}

void ContractEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_proto.ContractEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContractEvent::CopyFrom(const ContractEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_proto.ContractEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContractEvent::IsInitialized() const {
  return true;
}

void ContractEvent::Swap(ContractEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContractEvent::InternalSwap(ContractEvent* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&events_)->InternalSwap(CastToBase(&other->events_));
  contractid_.Swap(&other->contractid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata ContractEvent::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ProofRequest_2eproto);
  return ::file_level_metadata_ProofRequest_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TxMetaData::InitAsDefaultInstance() {
}
class TxMetaData::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TxMetaData::kFromAddressFieldNumber;
const int TxMetaData::kToAddressFieldNumber;
const int TxMetaData::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TxMetaData::TxMetaData()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_proto.TxMetaData)
}
TxMetaData::TxMetaData(const TxMetaData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fromaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fromaddress().size() > 0) {
    fromaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fromaddress_);
  }
  toaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.toaddress().size() > 0) {
    toaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.toaddress_);
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:request_proto.TxMetaData)
}

void TxMetaData::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TxMetaData_ProofRequest_2eproto.base);
  fromaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  toaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = PROTOBUF_ULONGLONG(0);
}

TxMetaData::~TxMetaData() {
  // @@protoc_insertion_point(destructor:request_proto.TxMetaData)
  SharedDtor();
}

void TxMetaData::SharedDtor() {
  fromaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  toaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TxMetaData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TxMetaData& TxMetaData::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TxMetaData_ProofRequest_2eproto.base);
  return *internal_default_instance();
}


void TxMetaData::Clear() {
// @@protoc_insertion_point(message_clear_start:request_proto.TxMetaData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fromaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  toaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TxMetaData::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TxMetaData*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes fromAddress = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_fromaddress();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes ToAddress = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_toaddress();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint64 Value = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_value(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TxMetaData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:request_proto.TxMetaData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes fromAddress = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_fromaddress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ToAddress = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_toaddress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:request_proto.TxMetaData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:request_proto.TxMetaData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TxMetaData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:request_proto.TxMetaData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes fromAddress = 1;
  if (this->fromaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->fromaddress(), output);
  }

  // bytes ToAddress = 2;
  if (this->toaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->toaddress(), output);
  }

  // uint64 Value = 3;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:request_proto.TxMetaData)
}

::google::protobuf::uint8* TxMetaData::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_proto.TxMetaData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes fromAddress = 1;
  if (this->fromaddress().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->fromaddress(), target);
  }

  // bytes ToAddress = 2;
  if (this->toaddress().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->toaddress(), target);
  }

  // uint64 Value = 3;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_proto.TxMetaData)
  return target;
}

size_t TxMetaData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_proto.TxMetaData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes fromAddress = 1;
  if (this->fromaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->fromaddress());
  }

  // bytes ToAddress = 2;
  if (this->toaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->toaddress());
  }

  // uint64 Value = 3;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TxMetaData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_proto.TxMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  const TxMetaData* source =
      ::google::protobuf::DynamicCastToGenerated<TxMetaData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_proto.TxMetaData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_proto.TxMetaData)
    MergeFrom(*source);
  }
}

void TxMetaData::MergeFrom(const TxMetaData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_proto.TxMetaData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fromaddress().size() > 0) {

    fromaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fromaddress_);
  }
  if (from.toaddress().size() > 0) {

    toaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.toaddress_);
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void TxMetaData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_proto.TxMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TxMetaData::CopyFrom(const TxMetaData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_proto.TxMetaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxMetaData::IsInitialized() const {
  return true;
}

void TxMetaData::Swap(TxMetaData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TxMetaData::InternalSwap(TxMetaData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  fromaddress_.Swap(&other->fromaddress_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  toaddress_.Swap(&other->toaddress_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
}

::google::protobuf::Metadata TxMetaData::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ProofRequest_2eproto);
  return ::file_level_metadata_ProofRequest_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Data::InitAsDefaultInstance() {
  ::request_proto::_Data_default_instance_._instance.get_mutable()->meta_ = const_cast< ::request_proto::TxMetaData*>(
      ::request_proto::TxMetaData::internal_default_instance());
}
class Data::HasBitSetters {
 public:
  static const ::request_proto::TxMetaData& meta(const Data* msg);
};

const ::request_proto::TxMetaData&
Data::HasBitSetters::meta(const Data* msg) {
  return *msg->meta_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Data::kMetaFieldNumber;
const int Data::kEventsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Data::Data()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_proto.Data)
}
Data::Data(const Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      events_(from.events_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_meta()) {
    meta_ = new ::request_proto::TxMetaData(*from.meta_);
  } else {
    meta_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:request_proto.Data)
}

void Data::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Data_ProofRequest_2eproto.base);
  meta_ = nullptr;
}

Data::~Data() {
  // @@protoc_insertion_point(destructor:request_proto.Data)
  SharedDtor();
}

void Data::SharedDtor() {
  if (this != internal_default_instance()) delete meta_;
}

void Data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Data& Data::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Data_ProofRequest_2eproto.base);
  return *internal_default_instance();
}


void Data::Clear() {
// @@protoc_insertion_point(message_clear_start:request_proto.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  events_.Clear();
  if (GetArenaNoVirtual() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Data::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Data*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .request_proto.TxMetaData meta = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::request_proto::TxMetaData::_InternalParse;
        object = msg->mutable_meta();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .request_proto.ContractEvent events = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::request_proto::ContractEvent::_InternalParse;
          object = msg->add_events();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:request_proto.Data)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .request_proto.TxMetaData meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .request_proto.ContractEvent events = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:request_proto.Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:request_proto.Data)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:request_proto.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .request_proto.TxMetaData meta = 1;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::meta(this), output);
  }

  // repeated .request_proto.ContractEvent events = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->events(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:request_proto.Data)
}

::google::protobuf::uint8* Data::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_proto.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .request_proto.TxMetaData meta = 1;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::meta(this), target);
  }

  // repeated .request_proto.ContractEvent events = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->events_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->events(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_proto.Data)
  return target;
}

size_t Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_proto.Data)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .request_proto.ContractEvent events = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->events_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->events(static_cast<int>(i)));
    }
  }

  // .request_proto.TxMetaData meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_proto.Data)
  GOOGLE_DCHECK_NE(&from, this);
  const Data* source =
      ::google::protobuf::DynamicCastToGenerated<Data>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_proto.Data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_proto.Data)
    MergeFrom(*source);
  }
}

void Data::MergeFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_proto.Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  events_.MergeFrom(from.events_);
  if (from.has_meta()) {
    mutable_meta()->::request_proto::TxMetaData::MergeFrom(from.meta());
  }
}

void Data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_proto.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Data::CopyFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_proto.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Data::IsInitialized() const {
  return true;
}

void Data::Swap(Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Data::InternalSwap(Data* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&events_)->InternalSwap(CastToBase(&other->events_));
  swap(meta_, other->meta_);
}

::google::protobuf::Metadata Data::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ProofRequest_2eproto);
  return ::file_level_metadata_ProofRequest_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ProofRequest::InitAsDefaultInstance() {
  ::request_proto::_ProofRequest_default_instance_._instance.get_mutable()->data_ = const_cast< ::request_proto::Data*>(
      ::request_proto::Data::internal_default_instance());
}
class ProofRequest::HasBitSetters {
 public:
  static const ::request_proto::Data& data(const ProofRequest* msg);
};

const ::request_proto::Data&
ProofRequest::HasBitSetters::data(const ProofRequest* msg) {
  return *msg->data_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProofRequest::kChainTypeFieldNumber;
const int ProofRequest::kChainIDFieldNumber;
const int ProofRequest::kDataFieldNumber;
const int ProofRequest::kTxHashFieldNumber;
const int ProofRequest::kHeightFieldNumber;
const int ProofRequest::kTxIndexFieldNumber;
const int ProofRequest::kOriginalDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProofRequest::ProofRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:request_proto.ProofRequest)
}
ProofRequest::ProofRequest(const ProofRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chaintype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.chaintype().size() > 0) {
    chaintype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chaintype_);
  }
  chainid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.chainid().size() > 0) {
    chainid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chainid_);
  }
  txhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.txhash().size() > 0) {
    txhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txhash_);
  }
  originaldata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.originaldata().size() > 0) {
    originaldata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.originaldata_);
  }
  if (from.has_data()) {
    data_ = new ::request_proto::Data(*from.data_);
  } else {
    data_ = nullptr;
  }
  ::memcpy(&height_, &from.height_,
    static_cast<size_t>(reinterpret_cast<char*>(&txindex_) -
    reinterpret_cast<char*>(&height_)) + sizeof(txindex_));
  // @@protoc_insertion_point(copy_constructor:request_proto.ProofRequest)
}

void ProofRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ProofRequest_ProofRequest_2eproto.base);
  chaintype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chainid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  originaldata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&txindex_) -
      reinterpret_cast<char*>(&data_)) + sizeof(txindex_));
}

ProofRequest::~ProofRequest() {
  // @@protoc_insertion_point(destructor:request_proto.ProofRequest)
  SharedDtor();
}

void ProofRequest::SharedDtor() {
  chaintype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chainid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txhash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  originaldata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void ProofRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProofRequest& ProofRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ProofRequest_ProofRequest_2eproto.base);
  return *internal_default_instance();
}


void ProofRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:request_proto.ProofRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chaintype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chainid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  originaldata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  ::memset(&height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&txindex_) -
      reinterpret_cast<char*>(&height_)) + sizeof(txindex_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ProofRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ProofRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string ChainType = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("request_proto.ProofRequest.ChainType");
        object = msg->mutable_chaintype();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string ChainID = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("request_proto.ProofRequest.ChainID");
        object = msg->mutable_chainid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .request_proto.Data Data = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::request_proto::Data::_InternalParse;
        object = msg->mutable_data();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bytes TxHash = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_txhash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint64 Height = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_height(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint64 TxIndex = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_txindex(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bytes OriginalData = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_originaldata();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ProofRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:request_proto.ProofRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ChainType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chaintype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chaintype().data(), static_cast<int>(this->chaintype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "request_proto.ProofRequest.ChainType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ChainID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chainid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chainid().data(), static_cast<int>(this->chainid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "request_proto.ProofRequest.ChainID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .request_proto.Data Data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes TxHash = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_txhash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Height = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 TxIndex = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &txindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes OriginalData = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_originaldata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:request_proto.ProofRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:request_proto.ProofRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ProofRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:request_proto.ProofRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ChainType = 1;
  if (this->chaintype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chaintype().data(), static_cast<int>(this->chaintype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.ProofRequest.ChainType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->chaintype(), output);
  }

  // string ChainID = 2;
  if (this->chainid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chainid().data(), static_cast<int>(this->chainid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.ProofRequest.ChainID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->chainid(), output);
  }

  // .request_proto.Data Data = 3;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::data(this), output);
  }

  // bytes TxHash = 4;
  if (this->txhash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->txhash(), output);
  }

  // uint64 Height = 5;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->height(), output);
  }

  // uint64 TxIndex = 6;
  if (this->txindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->txindex(), output);
  }

  // bytes OriginalData = 7;
  if (this->originaldata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->originaldata(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:request_proto.ProofRequest)
}

::google::protobuf::uint8* ProofRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:request_proto.ProofRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ChainType = 1;
  if (this->chaintype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chaintype().data(), static_cast<int>(this->chaintype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.ProofRequest.ChainType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->chaintype(), target);
  }

  // string ChainID = 2;
  if (this->chainid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chainid().data(), static_cast<int>(this->chainid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "request_proto.ProofRequest.ChainID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->chainid(), target);
  }

  // .request_proto.Data Data = 3;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::data(this), target);
  }

  // bytes TxHash = 4;
  if (this->txhash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->txhash(), target);
  }

  // uint64 Height = 5;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->height(), target);
  }

  // uint64 TxIndex = 6;
  if (this->txindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->txindex(), target);
  }

  // bytes OriginalData = 7;
  if (this->originaldata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->originaldata(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:request_proto.ProofRequest)
  return target;
}

size_t ProofRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:request_proto.ProofRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ChainType = 1;
  if (this->chaintype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chaintype());
  }

  // string ChainID = 2;
  if (this->chainid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chainid());
  }

  // bytes TxHash = 4;
  if (this->txhash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->txhash());
  }

  // bytes OriginalData = 7;
  if (this->originaldata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->originaldata());
  }

  // .request_proto.Data Data = 3;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // uint64 Height = 5;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->height());
  }

  // uint64 TxIndex = 6;
  if (this->txindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->txindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProofRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:request_proto.ProofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ProofRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ProofRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:request_proto.ProofRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:request_proto.ProofRequest)
    MergeFrom(*source);
  }
}

void ProofRequest::MergeFrom(const ProofRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:request_proto.ProofRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chaintype().size() > 0) {

    chaintype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chaintype_);
  }
  if (from.chainid().size() > 0) {

    chainid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chainid_);
  }
  if (from.txhash().size() > 0) {

    txhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txhash_);
  }
  if (from.originaldata().size() > 0) {

    originaldata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.originaldata_);
  }
  if (from.has_data()) {
    mutable_data()->::request_proto::Data::MergeFrom(from.data());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.txindex() != 0) {
    set_txindex(from.txindex());
  }
}

void ProofRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:request_proto.ProofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProofRequest::CopyFrom(const ProofRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:request_proto.ProofRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProofRequest::IsInitialized() const {
  return true;
}

void ProofRequest::Swap(ProofRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProofRequest::InternalSwap(ProofRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  chaintype_.Swap(&other->chaintype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  chainid_.Swap(&other->chainid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  txhash_.Swap(&other->txhash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  originaldata_.Swap(&other->originaldata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(data_, other->data_);
  swap(height_, other->height_);
  swap(txindex_, other->txindex_);
}

::google::protobuf::Metadata ProofRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_ProofRequest_2eproto);
  return ::file_level_metadata_ProofRequest_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace request_proto
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::request_proto::Attribute* Arena::CreateMaybeMessage< ::request_proto::Attribute >(Arena* arena) {
  return Arena::CreateInternal< ::request_proto::Attribute >(arena);
}
template<> PROTOBUF_NOINLINE ::request_proto::Event* Arena::CreateMaybeMessage< ::request_proto::Event >(Arena* arena) {
  return Arena::CreateInternal< ::request_proto::Event >(arena);
}
template<> PROTOBUF_NOINLINE ::request_proto::ContractEvent* Arena::CreateMaybeMessage< ::request_proto::ContractEvent >(Arena* arena) {
  return Arena::CreateInternal< ::request_proto::ContractEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::request_proto::TxMetaData* Arena::CreateMaybeMessage< ::request_proto::TxMetaData >(Arena* arena) {
  return Arena::CreateInternal< ::request_proto::TxMetaData >(arena);
}
template<> PROTOBUF_NOINLINE ::request_proto::Data* Arena::CreateMaybeMessage< ::request_proto::Data >(Arena* arena) {
  return Arena::CreateInternal< ::request_proto::Data >(arena);
}
template<> PROTOBUF_NOINLINE ::request_proto::ProofRequest* Arena::CreateMaybeMessage< ::request_proto::ProofRequest >(Arena* arena) {
  return Arena::CreateInternal< ::request_proto::ProofRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
